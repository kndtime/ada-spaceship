package body Spaceship is
  ---------
  -- "+" --
  ---------

  function "+" (V1, V2 : Vector) return Vector
  is
  begin
     return (X => V1 (X) + V2 (X),
             Y => V1 (Y) + V2 (Y));
  end "+";

  ---------
  -- "-" --
  ---------

  function "-" (V1, V2 : Vector) return Vector
  is
  begin
     return (X => V1 (X) - V2 (X),
             Y => V1 (Y) - V2 (Y));
  end "-";

  ---------
  -- "*" --
  ---------

  function "*" (V1, V2 : Vector) return Float
  is
  begin
     return V1 (X) * V2 (X) + V1 (Y) * V2 (Y);
  end "*";

  ---------
  -- "*" --
  ---------

  function "*" (V : Vector; Val : Float) return Vector
  is
  begin
     return (V (X) * Val, V (Y) * Val);
  end "*";

  ---------
  -- "/" --
  ---------

  function "/" (V : Vector; Val : Float) return Vector
  is
  begin
     return (V (X) / Val, V (Y) / Val);
  end "/";

  procedure set_dmg(s : in out Spaceship; dmg: Integer) is
    begin
      s.Life := s.Life - dmg;
  end set_dmg;

  procedure shoot (s : in out Spaceship) is
   begin
      s.Life := s.Life + 20;
  end shoot;

  procedure move (s : in out Spaceship; pos : Vector) is
    begin
      s.Center := pos;
  end move;

   procedure test is
     s : Spaceship := (ALIVE, 100, 100, 0, (0,0), (0,0));
    begin
      set_dmg(s, 100);
   end test;

end Spaceship;
